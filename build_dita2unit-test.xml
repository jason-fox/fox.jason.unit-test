<?xml version="1.0" encoding="UTF-8"?><!--
	This file is part of the DITA-OT Unit Test Plug-in project.
	See the accompanying LICENSE file for applicable licenses.
--><project xmlns:if="ant:if" xmlns:unless="ant:unless" name="fox.jason.unit-test">

	
	<!--
		Target to create a unit-test fixture for each suite.
	-->
	<target name="generate-fixtures" description="Generate a fixture file for each test suite">
		<property name="test.root.dir" value="${dita.temp.dir}/unit-test/fixtures"/>
	
		<mkdir dir="${test.root.dir}"/>
		<copy todir="${test.root.dir}">
			<fileset dir="${args.input}"/>
		</copy>

		<for param="test-suite.dir" trim="true">
			<path>
				<dirset dir="${test.root.dir}">
					<include name="*"/>
				</dirset>
			</path>
			<sequential>
				<propertyregex property="test-suite" override="true" input="@{test-suite.dir}" regexp="([^/]*)$" select="\1" casesensitive="false"/>
				<local name="test-suite.disabled"/>

				<available file="@{test-suite.dir}/disabled.txt" property="test-suite.disabled"/>

				<dita-ot-echo id="UNIT004W" if:set="test-suite.disabled">
					<param name="1" value="${test-suite}"/>
  				</dita-ot-echo>

				<dita-ot-echo id="UNIT002I" unless:set="test-suite.disabled">
					<param name="1" value="Generating fixtures for '${test-suite}'"/>
  				</dita-ot-echo>
				<create-fixture dir="@{test-suite.dir}" suite="${test-suite}" unless:set="test-suite.disabled"/>
			</sequential>
		</for>

	</target>


	<!--
		Iterate across each test suite in turn and run the unit tests using ant-unit.
	-->
	<target name="unit-test">

		<property name="test.copy.dir" value="${args.input}"/>
		<property name="test.copy" value="false"/>
		<condition property="test.suite.run.message" value="Updating test expectations">
			<istrue value="${test.copy}"/>
		</condition>
		<property name="test.suite.run.message" value="Running tests"/>


		<propertyset id="test-properties">
			<propertyref name="test.copy.dir"/>
			<propertyref name="test.copy"/>
			<propertyref name="test.propertyfile"/>
			<propertyref name="dita.dir"/>
		</propertyset>

		<taskdef resource="org/apache/ant/antunit/antlib.xml">
			 <classpath>
				<pathelement location="${dita.plugin.fox.jason.unit-test.dir}/lib/ant-antunit-1.3.jar"/>
			</classpath>
		</taskdef>
		<mkdir dir="${dita.temp.dir}/unit-test/report"/>

		<for param="test-suite.dir" keepgoing="true">
			<path>
				<dirset dir="${test.root.dir}">
					<present targetdir="${test.root.dir}">
						<mapper type="glob" from="*" to="*/fixture.xml"/>
					</present>
				</dirset>
			</path>
			<sequential>
				<xmltask source="@{test-suite.dir}/fixture.xml">
					<call path="//project/description">
						<param name="description" path="text()" default=""/>
						<actions>
							 <dita-ot-echo id="UNIT002I">
								<param name="1" value="${test.suite.run.message} for '@{description}'"/>
  							</dita-ot-echo>
							<antunit failOnError="false" errorproperty="test-failure">
								<file file="@{test-suite.dir}/fixture.xml"/>
								<xmllistener toDir="${dita.temp.dir}/unit-test/report" logLevel="warning"/>
								<plainlistener/>
								<propertyset refid="test-properties"/>
							</antunit>
						</actions>
					</call>
				</xmltask>
			</sequential>
		</for>
	</target>

	<!--
		Creates a formatted HTML report using the optional JUnitReport task.
	-->
	<target name="unit-test.report">
		<junitreport todir="${dita.temp.dir}" unless:true="test.copy">
			<fileset dir="${dita.temp.dir}/unit-test/report" includes="*.xml"/>
			<report format="noframes" styledir="${dita.plugin.fox.jason.unit-test.dir}/xsl" todir="${output.dir}"/>
		</junitreport>
		<move file="${output.dir}/junit-noframes.html" tofile="${output.dir}/test-results.html"/>
		<dita-ot-fail id="UNIT001F" unless:true="test.copy">
			<condition>
				<isset property="test-failure"/>
			</condition>
		</dita-ot-fail>
		<unit-test-success-echo/>
	</target>

	<!--
		Ant target executed to run a unit test suite.
	-->
	<target name="dita2unit-test" depends="build-init,unit-test.init,generate-fixtures,unit-test,unit-test.report"/>

</project>